/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GtspFrame.java
 *
 * Created on Dec 7, 2010, 1:22:00 AM
 */

package com.aperigeek.gtsp.ui;

import com.aperigeek.gtsp.AddressesDAO;
import com.aperigeek.gtsp.beans.Address;
import com.aperigeek.gtsp.geo.Location;
import com.aperigeek.gtsp.geo.LocationProvider;
import com.aperigeek.gtsp.geo.MapProvider;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author viv
 */
public class GtspFrame extends javax.swing.JFrame {

    private LocationProvider locationProvider;

    private MapProvider mapProvider;

    private AddressListModel addressListModel = new AddressListModel();

    private AddressesDAO addressesDAO;

    private JFileChooser fileChooser;

    /** Creates new form GtspFrame */
    public GtspFrame() {
        initComponents();
    }

    public void setLocationProvider(LocationProvider locationProvider) {
        this.locationProvider = locationProvider;
    }

    public void setMapProvider(MapProvider mapProvider) {
        this.mapProvider = mapProvider;
    }

    protected Location getLocation(String address) {
        if (locationProvider == null) {
            throw new IllegalStateException("Not location provider found");
        }

        return locationProvider.getLocation(address);
    }

    protected Image getMap(Location location) {
        if (mapProvider == null) {
            throw new IllegalStateException("No map provider found");
        }

        return mapProvider.getMap(location, mapLabel.getWidth(), mapLabel.getHeight());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addressesListScrollPane = new javax.swing.JScrollPane();
        addressesList = new javax.swing.JList();
        mapPane = new javax.swing.JPanel();
        mapLabel = new javax.swing.JLabel();
        addAddressButton = new javax.swing.JButton();
        removeAddressButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addressesList.setModel(addressListModel);
        addressesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                addressesListValueChanged(evt);
            }
        });
        addressesListScrollPane.setViewportView(addressesList);

        mapPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mapPane.setLayout(new java.awt.BorderLayout());

        mapLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mapPane.add(mapLabel, java.awt.BorderLayout.CENTER);

        addAddressButton.setText("Add");
        addAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAddressButtonActionPerformed(evt);
            }
        });

        removeAddressButton.setText("Remove");
        removeAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAddressButtonActionPerformed(evt);
            }
        });

        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveAsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAsMenuItem.setText("Save as");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addAddressButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeAddressButton))
                    .addComponent(addressesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mapPane, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mapPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addressesListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addAddressButton)
                            .addComponent(removeAddressButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAddressButtonActionPerformed
        String str = JOptionPane.showInputDialog(this, "Address");
        if (str != null) {
            Address address = new Address(str);
            address.setLocation(getLocation(str));
            addressListModel.addAddress(address);
        }
    }//GEN-LAST:event_addAddressButtonActionPerformed

    private void removeAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAddressButtonActionPerformed
        Address address = (Address) addressesList.getSelectedValue();
        if (address != null) {
            addressListModel.removeAddress(address);
        }
    }//GEN-LAST:event_removeAddressButtonActionPerformed

    private void addressesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_addressesListValueChanged
        Address address = (Address) addressesList.getSelectedValue();
        if (address != null) {
            Image image = getMap(address.getLocation());
            Icon icon = new ImageIcon(image);
            mapLabel.setIcon(icon);
        } else {
            mapLabel.setIcon(null);
        }
    }//GEN-LAST:event_addressesListValueChanged

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser chooser = getFileChooser();
        int choice = chooser.showOpenDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            addressesDAO = new AddressesDAO(file);
            try {
                List<Address> addresses = addressesDAO.loadAddresses();
                addressListModel.removeAllAddresses();
                addressListModel.addAddresses(addresses);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error loading file", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        JFileChooser chooser = getFileChooser();
        int choice = chooser.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            addressesDAO = new AddressesDAO(file);
            try {
                addressesDAO.saveAddresses(addressListModel.getAddresses());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error saving file", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    public JFileChooser getFileChooser() {
        if (fileChooser == null) {
            fileChooser = new JFileChooser();
        }

        return fileChooser;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAddressButton;
    private javax.swing.JList addressesList;
    private javax.swing.JScrollPane addressesListScrollPane;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel mapLabel;
    private javax.swing.JPanel mapPane;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton removeAddressButton;
    private javax.swing.JMenuItem saveAsMenuItem;
    // End of variables declaration//GEN-END:variables

}
